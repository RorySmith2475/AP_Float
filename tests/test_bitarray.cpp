#include <catch2/catch.hpp>
#include "AP/BitArray.hpp"

using namespace AP;

TEST_CASE("Comparison Operators")
{
    SECTION("Compare against primitive types")
    {
        REQUIRE(BitArray("0") == 0);
        REQUIRE(BitArray("14") == 14);
        REQUIRE(BitArray("1234567") == 1234567);

        REQUIRE(BitArray("0") != 1);
        REQUIRE(BitArray("14") != 13);
        REQUIRE(BitArray("1234567") != 123467);

        REQUIRE(BitArray("0") < 1);
        REQUIRE(BitArray("14") < 19);
        REQUIRE(BitArray("1234567") < 10234567);

        REQUIRE(BitArray("0") <= 0);
        REQUIRE(BitArray("0") <= 1);
        REQUIRE(BitArray("14") <= 14);
        REQUIRE(BitArray("14") <= 19);
        REQUIRE(BitArray("1234567") <= 1234567);
        REQUIRE(BitArray("1234567") <= 10234567);

        REQUIRE(BitArray("1") > 0);
        REQUIRE(BitArray("14") > 13);
        REQUIRE(BitArray("1234567") > 234567);

        REQUIRE(BitArray("1") >= 1);
        REQUIRE(BitArray("1") >= 0);
        REQUIRE(BitArray("14") >= 14);
        REQUIRE(BitArray("14") >= 13);
        REQUIRE(BitArray("1234567") >= 1234567);
        REQUIRE(BitArray("1234567") >= 123456);
    }

    SECTION("Compare against BitArray")
    {
        REQUIRE(BitArray("0") == BitArray("0"));
        REQUIRE(BitArray("14") == BitArray("14"));
        REQUIRE(
            BitArray("8762345786952437869452376894523978642359786542367982453987624539786234598762543986754238796543267894235678942538976524398762435876924358796234587692345987623459867")
            ==
            BitArray("8762345786952437869452376894523978642359786542367982453987624539786234598762543986754238796543267894235678942538976524398762435876924358796234587692345987623459867")
        );

        REQUIRE(BitArray("0") != BitArray("1"));
        REQUIRE(BitArray("14") != BitArray("13"));
        REQUIRE(
            BitArray("091287345908237459082437529084357243098572039845720389457234098573450982375")
            !=
            BitArray("871623874961239874619283764192873649182736498769876129873648791236487912364879612398471236498712364897123649871263498172364987123649871263487"));

        REQUIRE(BitArray("0") < BitArray("1"));
        REQUIRE(BitArray("14") < BitArray("19"));
        REQUIRE(
            BitArray("345634534564563453456345635635443643645653463456453653464353456354364554363543643454636345534636354634564536354")
            <
            BitArray("34590867340985760983457630984760983474509863574609867340986357309847603987406983740986374098637450986734509867340598673409586734095867309485760938457609834576093845763409586734506983457650894"));

        REQUIRE(BitArray("0") <= BitArray("0"));
        REQUIRE(BitArray("0") <= BitArray("1"));
        REQUIRE(BitArray("14") <= BitArray("14"));
        REQUIRE(BitArray("14") <= BitArray("19"));
        REQUIRE(
            BitArray("879250978575284325787845309859432089524370892547084253708947809243578023578905207854230879245879045870945328790452382435")
            <=
            BitArray("879250978575284325787845309859432089524370892547084253708947809243578023578905207854230879245879045870945328790452382435")
        );
        REQUIRE(
            BitArray("098782374509872345098273409587234098572309485720394857029834750987234509872345098723405987")
            <=
            BitArray("89752438790524387905243879025438792534875438432587904523843250794235784253784523780907594236768452367435798045320897432508794230589742358097542380970897425308972543089725430897234508795423870945328097645328906742358796024537684235879423587834725908409325789067453227459386076453254627854237852437905493208524739754373250")
        );

        REQUIRE(BitArray("1") > BitArray("0"));
        REQUIRE(BitArray("14") > BitArray("13"));
        REQUIRE(
            BitArray("40876432897043879327904328709143287904387743920094319327803214709341243218743217904312709413287943217094321786944321431290874389089047394370974312")
            >
            BitArray("45922537547852479805454237854785492370845923708945324532879045328790453278905432094532")
        );

        REQUIRE(BitArray("0") >= BitArray("0"));
        REQUIRE(BitArray("1") >= BitArray("0"));
        REQUIRE(BitArray("14") >= BitArray("14"));
        REQUIRE(BitArray("14") >= BitArray("13"));
        REQUIRE(
            BitArray("7890452372845392450387809254275489387904538745293087945234352734253524784879083707805394738542")
            >=
            BitArray("7890452372845392450387809254275489387904538745293087945234352734253524784879083707805394738542")
        );
        REQUIRE(
            BitArray("82837463298756243987562539876549875362597865423897526529478476892357643585837625843762435764352452365429765423768524378435269735426753427968543276895243769843237654276389542547623549854569478547632547365746238954984565493825432")
            >=
            BitArray("786423176894132768473261897346218974362189674938124736298")
        );
    }
}

TEST_CASE("Modification operators")
{
    BitArray b0("0");
    BitArray b1(45U);

    BitArray ba0("87342189704387094321789043218709432187904312879043217890432187904123"); // 68
    BitArray ba1("87342189704387094321789043218709432187904312879043217890432187904123");
    BitArray ba2("87342189704387094321789043218709432187904312879043217890432187904123");
    BitArray ba3("87342189704387094321789043218709432187904312879043217890432187904123");

    SECTION("Small BitArrays")
    {
        REQUIRE((b0 += b1) == b1);
        REQUIRE((b0 -= b1) == BitArray("0"));
        REQUIRE((b0 *= 2U) == BitArray("0"));
        REQUIRE((b0 <<= 45000U) == BitArray("0"));
        REQUIRE((b0 += BitArray("1")) == BitArray("1"));
        REQUIRE((b0 <<= 3U) == BitArray("8"));
        REQUIRE((b0 >>= 3U) == BitArray("1"));
        REQUIRE((b0 *= 8U) == BitArray("8"));
        REQUIRE((b0 >>= 30U) == BitArray("0"));
    }

    SECTION("Large BitArrays")
    {
        REQUIRE((ba0 += ba1) == (ba2 *= 2U));
        REQUIRE((ba0 -= ba1) == (ba2 >>= 1U));
        REQUIRE((b0 -= ba0) == ba0);
        REQUIRE((b0 -= ba0) == BitArray("0"));
        REQUIRE((ba0 <<= 3U) == (ba1 *= 8U));
        REQUIRE((ba0 >>= 30000U) == 0U);
    }
} 